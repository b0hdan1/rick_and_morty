{"version":3,"sources":["components/UI/Pagination/Pagination.jsx","api/getApi.jsx","pages/Characters/CharacterModal.jsx","pages/Characters/CharactersFilter.jsx","pages/Characters/Characters.jsx","components/UI/RenderList/RenderList.jsx","pages/Episodes/Episodes.jsx","pages/Locations/Locations.jsx","pages/MyWatchList/MyWatchListTable.jsx","pages/MyWatchList/MyWatchListForm.jsx","pages/MyWatchList/MyWatchList.jsx","components/Header/Header.jsx","App.jsx","index.js"],"names":["Pagination","nextPage","prevPage","Button","variant","size","onClick","BASE_URL","CharacterModal","setShow","show","element","Modal","onHide","Header","closeButton","Title","name","Body","Row","className","Col","lg","gender","status","type","species","src","image","alt","CharactersFilter","charactersResult","setCharacters","getGender","map","el","getFilterGenderName","Set","getSpecies","getFilterSpeciesName","getStatus","getFilterStatusName","htmlFor","onChange","e","target","value","filter","Characters","useState","maxPages","setMaxPages","currentPage","setCurrentPage","useEffect","num","fetch","then","response","json","characters","info","pages","results","setElement","id","prev","RenderList","list","filterBy","Table","hover","air_date","episode","dimension","Episodes","episodes","setEpisode","inputName","setInputName","gotEpisode","placeholder","toLowerCase","includes","Locations","locations","setLocation","gotLocation","location","MyWatchListTable","items","setItems","setErrorMessage","dataItem","Form","Check","checked","disabled","CloseButton","classNames","clicked","elID","defaultChecked","idItem","item","MyWatchListForm","showErrorMessage","setItem","length","setId","newEpisode","trim","newItem","prevState","method","onKeyPress","key","keyPress","preventDefault","MyWatchList","JSON","parse","localStorage","getItem","stringify","to","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10b9a640.chunk.js","sourcesContent":["import React from \"react\";\nimport './Pagination.scss';\nimport Button from '@mui/material/Button';\n\n\nexport const Pagination = ({ nextPage, prevPage }) => {\n  return (\n    <>\n      <Button variant=\"contained\" size=\"small\" onClick={prevPage}>Prev</Button>\n      <Button variant=\"contained\" size=\"small\" onClick={nextPage}>Next</Button>\n    </>\n  )\n}\n\n","export const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => response.json());\n\nexport const getLocations = (num) => fetch(`${BASE_URL}/location/?page=${num}`)\n  .then((response) => response.json());\n\nexport const getCharacters = (num) => fetch(`${BASE_URL}/character/?page=${num}`)\n  .then(response => response.json());\n\nexport const getEpisodes = (num) => fetch(`${BASE_URL}/episode/?page=${num}`)\n  .then((response) => response.json());\n","import React from 'react';\nimport {Modal, Row, Col} from 'react-bootstrap';\n\nexport const CharacterModal = ({ setShow, show, element }) => {\n  return (\n    <Modal show={show} onHide={setShow}>\n      <Modal.Header closeButton>\n        <Modal.Title>{element.name}</Modal.Title>\n      </Modal.Header >\n      <Modal.Body>\n        <Row className=\"align-items-center\">\n          <Col lg=\"6\">\n            <div>\n              <h4>Details Info:</h4>\n              <p>Gender: {element.gender}</p>\n              <p>Status: {element.status}</p>\n              <p>Type: {element.type ? element.type : \"Unknown\"}</p>\n              <p>Species: {element.species}</p>\n            </div>\n          </Col>\n          <Col lg=\"6\">\n            <div>\n              <img className=\"img-fluid\" src={element.image} alt=\"\"/>\n            </div>\n          </Col>\n        </Row>\n      </Modal.Body>\n    </Modal>\n  )\n}","import React from \"react\";\n\nexport const CharactersFilter = ({ charactersResult, setCharacters}) => {\n  const getGender = charactersResult.map(el => el.gender);\n  const getFilterGenderName = [...new Set(getGender)];\n\n  const getSpecies = charactersResult.map(el => el.species);\n  const getFilterSpeciesName = [...new Set(getSpecies)];\n\n  const getStatus = charactersResult.map(el => el.status);\n  const getFilterStatusName = [...new Set(getStatus)];\n\n  const filterSpecies = e => {\n    if (e.target.value === 'species') {\n      return;\n    }\n\n    setCharacters(charactersResult.filter(el => el.species === e.target.value));\n  }\n\n  const filterGender = e => {\n    if (e.target.value === 'gender') {\n      return;\n    }\n    setCharacters(charactersResult.filter(el => el.gender === e.target.value));\n\n  }\n\n  const filterStatus = e => {\n    if (e.target.value === 'status') {\n      return;\n    }\n\n    setCharacters(charactersResult.filter(el => el.status === e.target.value));\n  }\n  return (\n    <div className=\"filter-fields\">\n      <div className=\"filter-field\">\n        <label htmlFor=\"\" className=\"label\">Filter By species</label>\n        <select onChange={filterSpecies}>\n          <option value=\"species\">Species</option>\n          {getFilterSpeciesName.map(el => (\n            <option value={el} key={el}>{el}</option>\n          ))}\n        </select>\n        </div>\n        <div className=\"filter-field\">\n          <label htmlFor=\"\" className=\"label\">Filter By gender</label>\n          <select onChange={filterGender}>\n          <option value=\"gender\">Gender</option>\n          {getFilterGenderName.map(el => (\n            <option value={el} key={el}>{el}</option>\n          ))}\n          </select>\n        </div>\n        <div className=\"filter-field\">\n          <label htmlFor=\"\" className=\"label\">Filter By status</label>\n          <select onChange={filterStatus}>\n          <option value=\"status\">Status</option>\n          {getFilterStatusName.map(el => (\n            <option value={el} key={el}>{el}</option>\n          ))}\n          </select>\n        </div>\n      </div>\n  )\n}","import React, {useEffect, useState} from 'react';\nimport { Pagination } from '../../components/UI/Pagination/Pagination';\nimport { getCharacters } from '../../api/getApi';\nimport { Button } from 'react-bootstrap';\nimport { CharacterModal } from './CharacterModal';\nimport './Characters.scss';\nimport { CharactersFilter } from './CharactersFilter';\n\nexport const Characters = () => {\n  const [charactersResult, setCharacters] = useState([]);\n  const [maxPages, setMaxPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const nextPage = () => setCurrentPage(prev => prev + 1 === maxPages + 1 ? prev : prev + 1);\n  const prevPage = () => setCurrentPage(prev => prev - 1 ? prev - 1 : prev);\n\n  useEffect (() => {\n    getCharacters(`${currentPage}`)\n      .then(characters => {\n        setMaxPages(characters.info.pages);\n        setCharacters(characters.results);\n      })\n  }, [currentPage]);\n\n  const [show, setShow] = useState(false);\n  const [element, setElement] = useState([]);\n\n  const getModalElement = (elem) => {\n    setElement(elem);\n    setShow(true);\n  };\n\n  return (\n    <div className=\"characters-field\">\n      <CharactersFilter\n        charactersResult={charactersResult}\n        setCharacters={setCharacters}\n      />\n        <ul className=\"card-list\">\n          {charactersResult.map((el) => (\n            <div className=\"card\" key={el.id}>\n              <li className=\"character-item\">\n                <img className=\"card-image\" src={el.image} alt=\"\" />\n                <p className=\"character-name\">{el.name}</p>\n                <p className=\"character-gender\">{el.gender}</p>\n              </li>\n              <div>\n                <Button\n                  variant=\"primary\"\n                  size=\"sm\"\n                  className=\"additional-button\"\n                  onClick={() => getModalElement(el)}\n                >\n                  Additional info\n                </Button>\n              </div>\n            </div>\n          ))}\n          <CharacterModal\n            setShow={setShow}\n            show={show}\n            element={element}\n          />\n        </ul>\n        <Pagination\n          nextPage={nextPage}\n          prevPage={prevPage}\n          maxPages={maxPages}\n        />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport './RenderList.scss';\n\n\nexport const RenderList = ({ list, filterBy }) => {\n  return (\n    <Table hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>{filterBy === 'location' ? 'Type' : 'Date'}</th>\n            <th>{filterBy === 'location' ? 'Dimention' : 'Episode'}</th>\n          </tr>\n        </thead>\n        <tbody>\n        {list.map((el) => (\n          <tr key={el.id}>\n            <td>#{el.id}</td>\n            <td>{el.name}</td>\n            <td>{el.air_date ? el.air_date : el.type}</td>\n            <td>{el.episode ? el.episode : el.dimension}</td>\n          </tr>\n        ))}\n        </tbody>\n      </Table>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport { getEpisodes } from \"../../api/getApi\";\nimport { Pagination } from \"../../components/UI/Pagination/Pagination\";\nimport { RenderList } from \"../../components/UI/RenderList/RenderList\";\nimport './Episodes.scss';\n\n\nexport const Episodes = () => {\n  const [episodes, setEpisode] = useState([]);\n  const [inputName, setInputName] = useState('');\n  const [maxPages, setMaxPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const filterBy = 'episodes';\n\n  const nextPage = () => setCurrentPage(prev => prev + 1 === maxPages + 1 ? prev : prev + 1);\n  const prevPage = () => setCurrentPage(prev => prev - 1 ? prev - 1 : prev);\n\n\n  useEffect (() => {\n    getEpisodes(currentPage)\n      .then(gotEpisode => {\n        setMaxPages(gotEpisode.info.pages);\n        setEpisode(gotEpisode.results);\n      })\n  }, [currentPage]);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder='Filter by episode name'\n        onChange={e => setInputName(e.target.value.toLowerCase())}\n      />\n      <RenderList list={episodes\n        .filter(episode => episode.name.toLowerCase().includes(inputName))\n        }\n\n        filterBy={filterBy}\n      />\n      <Pagination\n          nextPage={nextPage}\n          prevPage={prevPage}\n          maxPages={maxPages}\n        />\n    </>\n  )\n}\n","import React, {useEffect, useState} from \"react\";\nimport { getLocations } from \"../../api/getApi\";\nimport { Pagination } from \"../../components/UI/Pagination/Pagination\";\nimport { RenderList } from \"../../components/UI/RenderList/RenderList\";\n\n\nexport const Locations = () => {\n  const [locations, setLocation] = useState([]);\n  const [inputName, setInputName] = useState('');\n  const [maxPages, setMaxPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const filterBy = 'location';\n\n  const nextPage = () => setCurrentPage(prev => prev + 1 === maxPages + 1 ? prev : prev + 1);\n  const prevPage = () => setCurrentPage(prev => prev - 1 ? prev - 1 : prev);\n\n  useEffect (() => {\n    getLocations(currentPage)\n      .then(gotLocation => {\n        setMaxPages(gotLocation.info.pages);\n        setLocation(gotLocation.results);\n      })\n  }, [currentPage]);\n\n  return (\n    <>\n      <input type=\"text\" placeholder='Filter by name' onChange={e => setInputName(e.target.value.toLowerCase())} />\n      <input type=\"text\" placeholder='Filter by type' onChange={e => setInputName(e.target.value.toLowerCase())} />\n      <input type=\"text\" placeholder='Filter by dimension' onChange={e => setInputName(e.target.value.toLowerCase())} />\n      <RenderList\n        list={locations\n          .filter(location => (location.name + location.type + location.dimension)\n            .toLowerCase().includes(inputName))\n        }\n\n      filterBy={filterBy}\n      />\n      <Pagination\n        nextPage={nextPage}\n        prevPage={prevPage}\n        maxPages={maxPages}\n      />\n    </>\n  )\n}","import React from \"react\";\nimport { Form, CloseButton } from \"react-bootstrap\";\nimport classNames from 'classnames';\n\nexport const MyWatchListTable = ({ items, setItems, setErrorMessage }) => {\n  const dataItem = [\n    {\n      episode: 'Anatomy Park',\n      id: 0,\n    },\n    {\n      episode: 'Rixty Minutes',\n      id: 1,\n    }\n  ]\n\n  const checkClick = (elID) => {\n    setItems(items.map(el => {\n      if (el.id === elID) {\n        el.clicked = !el.clicked;\n      }\n      return el;\n    }));\n  }\n\n  const removeItem = (idItem) => {\n    setItems(items.filter((item) => item.id !== idItem));\n    setErrorMessage(true);\n  }\n  return (\n    <table className=\"table_watch-list\">\n    <thead className=\"\">\n      <tr className=\"table-row\">\n        <th className=\"head-todo\">Episode</th>\n        <th className=\"head-todo\">Checked</th>\n        <th className=\"head-todo\">Remove</th>\n      </tr>\n    </thead>\n    <tbody className=\"current-tbody\">\n    <tr className=\"table-row\">\n      <td className=\"table-data complete\">{dataItem[0].episode}</td>\n      <td className=\"table-data\" >\n        <Form.Check aria-label=\"option 1\" checked disabled/>\n      </td>\n      <td className=\"table-data\">\n        <CloseButton disabled/>\n      </td>\n    </tr>\n    <tr className=\"table-row\">\n      <td className=\"table-data\">{dataItem[1].episode}</td>\n      <td className=\"table-data\" >\n      <input type=\"checkbox\" disabled/>\n      </td>\n      <td className=\"table-data\">\n        <CloseButton disabled/>\n      </td>\n    </tr>\n    {items.map((list) => (\n      <tr key={list.id} className=\"table-row\">\n        <td className={classNames(\n            list.clicked\n            ? 'table-data complete'\n            : 'table-data'\n          )}\n        >\n        {list.episode}</td>\n        <td className=\"table-data\">\n          <input\n            type=\"checkbox\"\n            onClick={() => checkClick(list.id)}\n            defaultChecked={list.clicked}\n          />\n        </td>\n        <td className=\"table-data\">\n          <CloseButton onClick={() => removeItem(list.id)}/>\n        </td>\n      </tr>\n    ))}\n    </tbody>\n  </table>\n  )\n}\n","import React, { useState } from \"react\";\n\nexport const MyWatchListForm = ({ items, setErrorMessage, showErrorMessage, setItems}) => {\n  const [item, setItem] = useState('');\n  const [id, setId] = useState(items[items.length -1] ? items[items.length -1].id + 1 : 2);\n\n  const newEpisode = () => {\n    if (items.length === 17) {\n      setErrorMessage(!showErrorMessage);\n      setItem('');\n    }\n\n    if (item.trim() !== '' && items.length < 17) {\n      const newItem = {\n        episode: item,\n        id: id,\n        clicked: false,\n      };\n\n      setItems((items) => [...items, newItem]);\n      setId((prevState) => prevState + 1);\n      setItem('');\n    }\n  }\n\n  const keyPress = (e) => {\n    if (e.key === 'Enter') {\n      newEpisode();\n    }\n  }\n\n  return (\n    <form method=\"get\" className=\"form\">\n    <h2 className=\"new-todo__header-title\">My watch list</h2>\n    <div className=\"new-todo__notes\">\n      <input\n        className=\"input input-title\"\n        name=\"title\"\n        type=\"text\"\n        placeholder=\"Enter episode name\"\n        value={item}\n        onChange={e => setItem(e.target.value)}\n        onKeyPress={(e) => keyPress(e)}\n      />\n      {!showErrorMessage && (\n          <p className=\"is-danger\">\n            Max 18 films can be added\n          </p>\n        )\n      }\n    </div>\n\n    <div className=\"container_current-button\">\n      <button\n        type=\"submit\"\n        className=\"new-todo__button\"\n        onClick={e => {\n          e.preventDefault();\n          newEpisode();\n        }}\n      >\n        Add\n      </button>\n    </div>\n  </form>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { MyWatchListTable } from \"./MyWatchListTable\";\nimport { MyWatchListForm } from \"./MyWatchListForm\";\n\nimport \"./MyWatchList.scss\";\n\nexport const MyWatchList = () => {\n  const [showErrorMessage, setErrorMessage] = useState(true);\n  const [items, setItems] = useState(\n    JSON.parse(localStorage.getItem('items')) || []\n  );\n\n  useEffect(() => {\n    localStorage.setItem('items', JSON.stringify(items))\n  }, [items])\n\n  return (\n    <>\n      <div className=\"card-watch-list\">\n        <MyWatchListForm\n          items={items}\n          setErrorMessage={setErrorMessage}\n          showErrorMessage={showErrorMessage}\n          setItems={setItems}\n        />\n      </div>\n      <MyWatchListTable\n        items={items}\n        setItems={setItems}\n        setErrorMessage={setErrorMessage}\n      />\n    </>\n  )\n}\n","import { Link } from 'react-router-dom';\nimport './Header.scss';\n\n\nexport const Header = () => {\n  return (\n    <div className=\"page-header\">\n      <header>\n        <h1 className=\"header-title\">Rick and Morty</h1>\n        <Link className=\"link header-link\" to=\"/characters\">Characters</Link>\n        <Link className=\"link header-link\" to=\"/episodes\">Episodes</Link>\n        <Link className=\"link header-link\" to=\"/locations\">Locations</Link>\n        <Link className=\"link header-link\" to=\"/my-watch-list\">My watch list</Link>\n      </header>\n    </div>\n  )\n}","import React from 'react';\nimport './App.scss';\nimport { Characters } from './pages/Characters/Characters';\nimport { Episodes } from './pages/Episodes/Episodes';\nimport { Locations } from './pages/Locations/Locations';\nimport { MyWatchList } from './pages/MyWatchList/MyWatchList';\nimport { Header } from './components/Header/Header';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nexport const App = () => {\n  return (\n    <>\n      <Router>\n        <Header />\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/characters\" component={Characters}/>\n            <Route path=\"/episodes\" component={Episodes}/>\n            <Route path=\"/locations\" component={Locations}/>\n            <Route path=\"/my-watch-list\" component={MyWatchList}/>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}